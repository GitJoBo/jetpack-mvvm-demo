plugins {
    id 'com.android.application'
//    id 'kotlin-android'
//    id 'kotlin-kapt'
//    id 'kotlin-parcelize'
}
apply from : '../common.gradle'

android {
//    compileSdk project.ANDROID_COMPILE_SDK_VERSION as int

    defaultConfig {
        // 无痛修改包名：https://www.jianshu.com/p/17327e191d2e
        applicationId ANDROID_APPLICATION_ID
//        minSdk ANDROID_MIN_SDK_VERSION as int
//        targetSdk ANDROID_TARGET_SDK_VERSION as int
//        versionCode ANDROID_VERSION_CODE as int
//        versionName ANDROID_VERSION_NAME

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // 仅保留中文语种的资源
        resConfigs 'zh'

        // 仅保留 xxhdpi 图片资源（目前主流分辨率 1920 * 1080）
        resConfigs 'xxhdpi'

        // 混淆配置
//        proguardFiles 'proguard-sdk.pro', 'proguard-app.pro'
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        // 日志打印开关
        buildConfigField('boolean', 'LOG_ENABLE', '' + LOG_ENABLE + '')
        // 测试包下的 BuglyId
        buildConfigField('String', 'BUGLY_ID', '"' + BUGLY_ID + '"')
        // 测试服务器的主机地址
        buildConfigField('String', 'HOST_URL', '"' + HOST_URL + '"')
    }

    // Apk 签名的那些事：https://www.jianshu.com/p/a1f8e5896aa2
    signingConfigs {
        config {
            storeFile file(StoreFile)
            storePassword StorePassword
            keyAlias KeyAlias
            keyPassword KeyPassword
        }
    }

    // 构建配置：https://developer.android.google.cn/studio/build/build-variants
    buildTypes {

        debug {
            // 给包名添加后缀
            applicationIdSuffix '.debug'
            // 调试模式开关
            debuggable true
            jniDebuggable true
            // 压缩对齐开关
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources true
            // 代码混淆开关
            minifyEnabled true
            // 签名信息配置
            signingConfig signingConfigs.config
            // 添加清单占位符
            addManifestPlaceholders([
                    'app_name'    :    '基础架构 Debug 版'
            ])
            // 调试模式下只保留一种架构的 so 库，提升打包速度
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }

        preview.initWith(debug)
        preview {
            applicationIdSuffix ''
            // 添加清单占位符
            addManifestPlaceholders([
                    'app_name'    :    '基础架构 Preview 版'
            ])
        }

        release {
            // 调试模式开关
            debuggable false
            jniDebuggable false
            // 压缩对齐开关
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources true
            // 代码混淆开关
            minifyEnabled true
            // 签名信息配置
            signingConfig signingConfigs.config
            // 添加清单占位符
            addManifestPlaceholders([
                    'app_name'    :    '@string/app_name'
            ])
            // 仅保留两种架构的 so 库，根据 Bugly 统计得出
            ndk {
                // armeabi：万金油架构平台（占用率：0%）
                // armeabi-v7a：曾经主流的架构平台（占用率：10%）
                // arm64-v8a：目前主流架构平台（占用率：95%）
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
        }
//        debug {
//            minifyEnabled false //关闭混淆
//            shrinkResources false
//            zipAlignEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
//        release {
//            minifyEnabled true //开启混淆
//            shrinkResources true
//            zipAlignEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
    }

//    buildFeatures{
//        //如果您计划在 Kotlin 项目中使用数据绑定，您应该应用 kotlin-kapt 插件。
//        dataBinding = true
//        //对“viewBinding”的访问超出其访问权限
//        viewBinding = true
//    }
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_11
//        targetCompatibility JavaVersion.VERSION_11
//    }
//    kotlinOptions {
//        jvmTarget = '11'
//    }

//    packagingOptions {
//        // 剔除这个包下的所有文件（不会移除签名信息）
//        exclude 'META-INF/*******'
//    }

    applicationVariants.all { variant ->
        // apk 输出文件名配置
        variant.outputs.all { output ->
            outputFileName = rootProject.getName() + '_v' + variant.versionName + '_' + variant.buildType.name
            if (variant.buildType.name == buildTypes.release.getName()) {
                outputFileName += '_' + new Date().format('MMdd')
            }
            outputFileName += '.apk'
        }
    }
}

dependencies {
    implementation project(":ui_common")
    //banner
    implementation "com.github.zhpanvip:BannerViewPager:3.5.5"
    //启动优化异步加载
    api "com.effective.android:anchors:1.1.1"
    //官方的
    implementation 'com.google.android:flexbox:2.0.1'

    // 内存泄漏监测框架：https://github.com/square/leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
//    previewImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

//    implementation "androidx.core:core-ktx:$CORE_KTX"
//    implementation "androidx.appcompat:appcompat:$APPCOMPAT"
//    implementation "com.google.android.material:material:$MATERIAL"
//    implementation "androidx.constraintlayout:constraintlayout:$CONSTRAINTLAYOUT"
//    testImplementation "junit:junit:$JUNIT"
//    androidTestImplementation "androidx.test.ext:junit:$TEST_EXT_JUNIT"
//    androidTestImplementation "androidx.test.espresso:espresso-core:$ESPRESSO_CORE"


}